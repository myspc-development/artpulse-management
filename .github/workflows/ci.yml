name: Plugin CI

on:
  push:
  pull_request:

jobs:
  test:
    name: Lint, Build & Test (PHP ${{ matrix.php-version }}, WP ${{ matrix.wp-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.2', '8.3']
        wp-version: ['6.5', '6.8']

    env:
      WP_VERSION: ${{ matrix.wp-version }}
      DB_NAME: wordpress_test
      DB_USER: root
      DB_PASSWORD: root
      DB_HOST: 127.0.0.1
      WP_MULTISITE: 0

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: xdebug
          extensions: mbstring, mysqli

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node dependencies
        run: npm ci

      - name: Build assets
        run: npm run build

      - name: Verify generated assets are committed
        run: |
          CHANGED_FILES="$(git status --porcelain -- assets/js assets/css)"
          if [ -n "${CHANGED_FILES}" ]; then
            echo "Generated asset files are out of date. Please run 'npm run build' and commit the changes." >&2
            echo "Changed files:" >&2
            echo "${CHANGED_FILES}" >&2
            exit 1
          fi

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Run PHPCS Sniff
        run: composer run sniff

      - name: Setup WordPress test suite
        run: bash ./scripts/src/install-wp-tests.sh $DB_NAME $DB_USER $DB_PASSWORD $DB_HOST ${{ matrix.wp-version }}

      - name: Run PHP Lint
        run: find . -type f -name "*.php" -exec php -l {} \;

      - name: Run PHPUnit tests with coverage
        run: vendor/bin/phpunit --configuration phpunit.xml.dist --coverage-text --coverage-clover=coverage.xml

      - name: Upload coverage report (optional)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: coverage/html/

  i18n-check:
    name: Internationalization catalog
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node dependencies
        run: npm ci

      - name: Install WP-CLI
        run: |
          mkdir -p vendor/bin
          curl -sSL https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -o vendor/bin/wp
          chmod +x vendor/bin/wp

      - name: Install WP-CLI i18n command
        run: vendor/bin/wp package install wp-cli/i18n-command:@stable

      - name: Rebuild translation template
        run: npm run i18n:pot

      - name: Verify translation template is up to date
        run: git diff --exit-code languages/artpulse.pot

